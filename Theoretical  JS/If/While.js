// Examples. 2 conditions.
var x = 15;
  while (x > 5 || x % 5 == 0) {
  console.log (x);
  x--;
  }



/*Task 1.  Даны положительные числа a и b (a > b). На отрезке длины a
 размещено максимально возможное количество отрезков
 длины b (без наложений).Не используя операции
 умножения и деления, найти длину незанятой части отрезка a .*/
var a = 10;
var b = 3;
var i = a;
  while ( i >= b  ) {
  i = i - b;
}
console.log(i);

/*Task 2. Даны положительные числа a и b (a > b). На отрезке длины a размещено
максимально возможное количество отрезков длины b (без наложений).
Не используя операции умножения и деления, найти количество
отрезков b, размещенных на отрезке a.*/
var a = 10;
var b = 3;
var i = 0;
var max = a;
  while ( max - b >= 0) {
  max = max - b;
  i++;
}
console.log(i);

/*Task 3. Даны целые положительные числа N и K. Используя только операции
 сложения и вычитания, найти частное от деления нацело N на K ,
 а также остаток от этого деления.*/

 var a = 10;
 var b = 2;
 var remainder = a;
 var quotient = 0;
   while ( remainder >= b  ) {
   remainder = remainder - b;
   quotient++;
 }
 console.log(remainder);
 console.log(quotient);

 /*Task 4. Дано целое число N (N > 0). Если оно является степенью числа 3,
 то вывести True, если не является — вывести False.*/

 var N = 9;
  while (N % 3 == 0) {
   N /= 3;
  }
console.log(N == 1);


/* Task 5. Дано целое число N (N > 0), являющееся некоторой степенью числа 2:
N=2 в степени k.
Найти целое число k — показатель этой степени.*/
var N = 32;
var a = 2;
var i = 0;
var max = N;
while( max % a == 0 ) {
  max /= a;
i++;
}
console.log (i);

/* Task 7. Дано целое число N (> 0). Найти наименьшее целое
 положительное число K, квадрат которого превосходит N: K в квадрате > N.
 Функцию извлечения квадратного корня не использовать.*/
 var N = 10;
 var K = 1 ;
   while ( K * K <= N  ) {
    K++;

   }
console.log (K);

/* Task 8. Дано целое число N (> 0). Найти наибольшее целое
 число K, квадрат которого не превосходит N: K в квадрате <= N.
 Функцию извлечения квадратного корня не использовать.*/

 var N = 10;
 var K = 0 ;
   while ( K * K <= N  ) {
    K++;

   }
 console.log (K - 1);

 /*Task 9. Дано целое число N ( > 1). Найти наименьшее целое число K ,
  при котором выполняется неравенство 3 в степени K  > N .*/

  var N = 10;
  var K = 0 ;
    while (  3 ** K <= N  ) {
     K++;
    }
  console.log (K);

  /*Task 10. Дано целое число N ( > 1). Найти наибольшее целое число K ,
   при котором выполняется неравенство 3 в степени K  < N .*/
   var N = 10;
   var K = 0 ;
    while (  3 ** K <= N  ) {
      K++;
    }
   console.log (K - 1);

/*Task 11. Дано целое число N ( > 1). Вывести наименьшее из целых чисел K,
для которых сумма 1 +2 + ... + K  будет больше или равна N, и саму эту сумму.*/

var N = 10;
var K = 0 ;
var sum = 0;
  while (sum < N) {    // ставить строго < или  <=  ?
    K++;
    sum +=K
  }
  console.log (sum);
  console.log (K);

/*Task 12. Дано целое число N ( > 1). Вывести наибольшее из целых чисел K,
 для которых сумма 1 +2 + ... + K будет меньше или равна N, и саму эту сумму.*/
